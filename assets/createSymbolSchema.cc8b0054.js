import{E as c}from"./Pipeline.bd4e0c50.js";import{L as u}from"./SymbolProcessor.470e2743.js";import"./index.1cb8d8e9.js";import"./TileInfo.e40a9999.js";import"./featureConversionUtils.f7dcbf2f.js";import"./QueryEngine.0c46e18a.js";import"./normalizeUtils.eed8cb48.js";import"./WhereClause.ca449127.js";import"./projection.62b3b5ff.js";import"./ClassBreaksDefinition.c90803a9.js";import"./quickselect.b4c2f48f.js";import"./ogcFeatureUtils.22d842f1.js";import"./pbf.380380f2.js";import"./enums2.51e7cb08.js";import"./enums.0a9daf41.js";import"./Texture.b47d6db1.js";import"./context-util.af75396b.js";import"./TileKey.84f40d4e.js";import"./TileClipper.153e5491.js";import"./Geometry.c655e876.js";import"./vec2.91d30fa5.js";import"./tileUtils.93c873b9.js";import"./earcut.330b1716.js";import"./OptimizedGeometry.f0fa3196.js";import"./query.b3837488.js";import"./pbfQueryUtils.ea4ef19b.js";import"./OptimizedFeatureSet.2574e09f.js";import"./aaBoundingRect.124aa756.js";import"./ItemCache.5ca3ec95.js";import"./json.67c3770f.js";import"./QueryEngineCapabilities.9e441dc1.js";import"./utils.5049cf8b.js";import"./geojson.eee52f4c.js";import"./clientSideDefaults.be9dca0a.js";import"./devEnvironmentUtils.31af846a.js";var v=Object.defineProperty,_=Object.defineProperties,b=Object.getOwnPropertyDescriptors,V=Object.getOwnPropertySymbols,P=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,S=(r,e,t)=>e in r?v(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,l=(r,e)=>{for(var t in e||(e={}))P.call(e,t)&&S(r,t,e[t]);if(V)for(var t of V(e))w.call(e,t)&&S(r,t,e[t]);return r},h=(r,e)=>_(r,b(e));function y(r){if(r.type==="line-marker"){var e;return{type:"line-marker",color:(e=r.color)==null?void 0:e.toJSON(),placement:r.placement,style:r.style}}return r.constructor.fromJSON(r.toJSON()).toJSON()}function f(r){return hydrateKey(r)}function cr(r,e,t){if(!r)return null;switch(r.type){case"simple-fill":case"picture-fill":return g(r,e,t);case"simple-marker":case"picture-marker":return E(r,e,t);case"simple-line":return x(r,e,t);case"text":return z(r,e,t);case"label":return K(r,e,t);case"cim":return{type:"cim",rendererKey:e.vvFlags,data:r.data,maxVVSize:e.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:e.vvFlags,data:r,maxVVSize:e.maxVVSize};case"web-style":return h(l({},y(r)),{type:"web-style",hash:r.hash(),rendererKey:e.vvFlags,maxVVSize:e.maxVVSize});default:throw new Error(`symbol not supported ${r.type}`)}}function K(r,e,t){const o=r.toJSON(),a=u(c.LABEL,h(l({},e),{placement:o.labelPlacement}));return h(l({materialKey:t?f(a):a,hash:r.hash()},o),{labelPlacement:o.labelPlacement})}function g(r,e,t){const o=e.supportsOutlineFills,a=u(c.FILL,h(l({},e),{isOutlinedFill:o})),i=t?f(a):a,s=r.clone(),n=s.outline;e.supportsOutlineFills||(s.outline=null);const O=l({materialKey:i,hash:s.hash(),isOutlinedFill:!!e.supportsOutlineFills},y(s));if(e.supportsOutlineFills)return O;const p=[];if(p.push(O),n){const m=u(c.LINE,h(l({},e),{isOutline:!0})),d=l({materialKey:t?f(m):m,hash:n.hash()},y(n));p.push(d)}return{type:"composite-symbol",layers:p,hash:p.reduce((m,d)=>d.hash+m,"")}}function x(r,e,t){const o=u(c.LINE,e),a=t?f(o):o,i=r.clone(),s=i.marker;i.marker=null;const n=[];if(n.push(l({materialKey:a,hash:i.hash()},y(i))),s){var O;const p=u(c.MARKER,e),m=t?f(p):p;s.color=(O=s.color)!=null?O:i.color,n.push(l({materialKey:m,hash:s.hash(),lineWidth:i.width},y(s)))}return{type:"composite-symbol",layers:n,hash:n.reduce((p,m)=>m.hash+p,"")}}function E(r,e,t){const o=u(c.MARKER,e),a=t?f(o):o,i=y(r);return h(l({materialKey:a,hash:r.hash()},i),{angle:r.angle,maxVVSize:e.maxVVSize})}function z(r,e,t){const o=u(c.TEXT,e),a=t?f(o):o,i=y(r);return h(l({materialKey:a,hash:r.hash()},i),{angle:r.angle,maxVVSize:e.maxVVSize})}export{cr as createSymbolSchema};
