import{q as s,u as o,x as P,ew as A,ex as J,fb as N,es as k,fa as z,et as W,eu as U,ao as Z,ap as K,ev as V,aq as H,fc as O,eG as X,bM as R,fd as Y,eW as ee,fe as te,y as se,M as re,ec as D,eI as ie,fg as oe,ff as ae,f5 as ne,eO as le,eJ as pe,eK as ue,eL as de,fi as ce,g,eo as fe,au as ye,ah as he,am as me,r as w,t as ge,fT as ve,o as T,eY as Se,av as $e}from"./entry.a426b012.js";import{N as xe,F as C,v as j,x as we,k as be,T as Ie,S as Fe,I as Oe,j as Re}from"./ogcFeatureUtils.6caa1ac9.js";import"./featureConversionUtils.6d559b11.js";import"./OptimizedFeatureSet.1d1ac4b9.js";import"./geojson.36f4ed9e.js";import"./OptimizedGeometry.3220611a.js";import"./clientSideDefaults.e3a40a4b.js";import"./QueryEngineCapabilities.5c978644.js";let h=class extends he{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getFeatureDefinition(){const{featureDefinition:{collection:e,layerDefinition:t,spatialReference:a,supportedCrs:r},layer:{apiKey:n,capabilities:p,customParameters:l}}=this;return{capabilities:p,collection:e,layerDefinition:t,queryParameters:{apiKey:n,customParameters:l},spatialReference:a,supportedCrs:r}}queryExtent(e,t={}){return null}queryFeatureCount(e,t={}){return null}queryFeatures(e,t={}){return this.queryFeaturesJSON(e,t).then(a=>me.fromJSON(a))}queryFeaturesJSON(e,t={}){const a=this.getFeatureDefinition();return this.load(t).then(()=>xe(a,e,t))}queryObjectIds(e,t={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator)||!!this.featureDefinition.supportedCrs[e.wkid]}_conformsToType(e,t){var a;const r=new RegExp(`^${t}$`,"i");return(a=e.conformsTo.some(n=>r.test(n)))!=null&&a}_getCapabilities(e,t){var a,r,n,p,l,u,c;const d=w(t)?(a=t.components)==null?void 0:a.parameters:null;return{attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:(r=(n=d==null||(p=d.limit)==null||(l=p.schema)==null?void 0:l.maximum)!=null?n:d==null||(u=d.limitFeatures)==null||(c=u.schema)==null?void 0:c.maximum)!=null?r:5e3,maxRecordCountFactor:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1}}}_getExtent(e){var t;const a=(t=e.extent)==null?void 0:t.spatial;if(!a)return null;const r=a.bbox[0],n=r.length===4,p=r[0],l=r[1],u=n?void 0:r[2];return{xmin:p,ymin:l,xmax:n?r[2]:r[3],ymax:n?r[3]:r[4],zmin:u,zmax:n?void 0:r[5],spatialReference:g.WGS84.toJSON()}}_getStorageSpatialReference(e){var t;const a=(t=e.storageCrs)!=null?t:C,r=j(a);return ge(r)?g.WGS84:new g({wkid:r})}_getSupportedSpatialReferences(e,t){var a;const r="#/crs",n=(a=e.crs)!=null?a:[C],p=n.includes(r)?n.filter(u=>u!==r).concat(t.crs):n,l=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return p.filter(u=>!l.test(u))}async _loadOGCServices(e,t){const a=w(t)?t.signal:null,{apiKey:r,collectionId:n,customParameters:p,fields:l,geometryType:u,hasZ:c,objectIdField:d,timeInfo:b,url:E}=e,_={fields:l==null?void 0:l.map(y=>y.toJSON()),geometryType:ve.toJSON(u),hasZ:c,objectIdField:d,timeInfo:b==null?void 0:b.toJSON()},m={apiKey:r,customParameters:p,signal:a},v=await we(E,m),[I,F]=await Promise.all([be(v,m),Ie(v,m)]);if(!this._conformsToType(I,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new T("ogc-feature-layer:no-geojson-support","Server does not support geojson");const f=F.collections.find(y=>y.id===n);if(!f)throw new T("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const q=this._conformsToType(I,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await Fe(v,m):null,S=await Oe(f,_,m),G=this._getCapabilities(S.hasZ,q),B=this._getExtent(f),M=this._getStorageSpatialReference(f).toJSON(),L=this._getSupportedSpatialReferences(f,F),Q=new RegExp(`^${Re}`,"i"),$={};for(const y of L){const x=j(y);w(x)&&($[x]||($[x]=y.replace(Q,"")))}S.extent=B,this.featureDefinition={capabilities:G,collection:f,layerDefinition:S,queryParameters:{},spatialReference:M,supportedCrs:$}}};s([o()],h.prototype,"featureDefinition",void 0),s([o({constructOnly:!0})],h.prototype,"layer",void 0),s([o()],h.prototype,"type",void 0),h=s([P("esri.layers.graphics.sources.OGCFeatureSource")],h);const De=h,Te=Se();let i=class extends A(J(N(k(z(W(U(Z(K(V(H($e))))))))))){constructor(e){super(e),this.collectionId=null,this.copyright=null,this.definitionExpression=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new De({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then(()=>this._fetchService(e))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}set renderer(e){O(e,this.fieldsIndex),this._set("renderer",e)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return X(this,e)}createQuery(){return new R}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var a;let r,n=!1;const p=t==null||(a=t.feature)==null?void 0:a.attributes,l=this.typeIdField&&(p==null?void 0:p[this.typeIdField]);return l!=null&&this.types&&(n=this.types.some(u=>{var c,d;return u.id==l&&(r=(c=u.domains)==null?void 0:c[e],((d=r)==null?void 0:d.type)==="inherited"&&(r=this._getLayerDomain(e)),!0)})),n||r||(r=this._getLayerDomain(e)),r}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(R.from(e)||this.createQuery(),t)).then(a=>{var r;return a==null||(r=a.features)==null||r.forEach(n=>{n.layer=n.sourceLayer=this}),a})}serviceSupportsSpatialReference(e){var t,a;return(t=(a=this.source)==null?void 0:a.serviceSupportsSpatialReference(e))!=null&&t}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),O(this.renderer,this.fieldsIndex),Y(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const t of this.fields)if(t.name===e&&t.domain)return t.domain;return null}};s([o({readOnly:!0,json:{origins:{service:{read:!0}}}})],i.prototype,"capabilities",void 0),s([o({type:String,json:{write:!0}})],i.prototype,"collectionId",void 0),s([o({type:String})],i.prototype,"copyright",void 0),s([o({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),s([o({type:String})],i.prototype,"definitionExpression",void 0),s([o({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],i.prototype,"description",void 0),s([o({type:String})],i.prototype,"displayField",void 0),s([o(ee)],i.prototype,"elevationInfo",void 0),s([o(te)],i.prototype,"featureReduction",void 0),s([o({type:[se],json:{origins:{service:{name:"layerDefinition.fields"}}}})],i.prototype,"fields",void 0),s([o(Te.fieldsIndex)],i.prototype,"fieldsIndex",void 0),s([o({readOnly:!0,type:re,json:{origins:{service:{name:"layerDefinition.extent"}}}})],i.prototype,"fullExtent",void 0),s([o({type:D.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:D.read}}}}})],i.prototype,"geometryType",void 0),s([o({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],i.prototype,"hasZ",void 0),s([o({type:Boolean,readOnly:!0})],i.prototype,"isTable",null),s([o({type:[ie],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:oe},write:!0}}}})],i.prototype,"labelingInfo",void 0),s([o(ae)],i.prototype,"labelsVisible",void 0),s([o(ne)],i.prototype,"legendEnabled",void 0),s([o({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],i.prototype,"objectIdField",void 0),s([o({type:["OGCFeatureLayer"]})],i.prototype,"operationalLayerType",void 0),s([o(le)],i.prototype,"popupEnabled",void 0),s([o({type:pe,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),s([o({types:ue,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:de,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],i.prototype,"renderer",null),s([o(ce)],i.prototype,"screenSizePerspectiveEnabled",void 0),s([o({readOnly:!0})],i.prototype,"source",void 0),s([o({readOnly:!0,type:g,json:{origins:{service:{read:!0}}}})],i.prototype,"spatialReference",void 0),s([o({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],i.prototype,"title",void 0),s([o({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([o({type:String,readOnly:!0})],i.prototype,"typeIdField",void 0),s([o({type:[fe]})],i.prototype,"types",void 0),s([o(ye)],i.prototype,"url",void 0),i=s([P("esri.layers.OGCFeatureLayer")],i);const Me=i;export{Me as default};
