import{E as c}from"./Pipeline.ef7592fb.js";import{L as u}from"./SymbolProcessor.9c3b999c.js";import"./entry.d0d45c75.js";import"./TileInfo.50f759a9.js";import"./featureConversionUtils.0e09ef6d.js";import"./QueryEngine.c2fe518a.js";import"./normalizeUtils.e24c69e7.js";import"./WhereClause.450df49a.js";import"./projection.9afbc7bb.js";import"./ClassBreaksDefinition.42e08b2d.js";import"./quickselect.322ec8e1.js";import"./ogcFeatureUtils.744261ac.js";import"./pbf.869acdbe.js";import"./enums2.2149e694.js";import"./enums.ad15c731.js";import"./Texture.0aa5fed4.js";import"./context-util.a505fb6e.js";import"./TileKey.edd4101c.js";import"./TileClipper.55932042.js";import"./Geometry.daada628.js";import"./tileUtils.a241466a.js";import"./earcut.d72b7070.js";import"./OptimizedGeometry.995777ba.js";import"./query.de3574c5.js";import"./pbfQueryUtils.d62db95c.js";import"./OptimizedFeatureSet.1d1ac4b9.js";import"./aaBoundingRect.ee3dc126.js";import"./ItemCache.af316a63.js";import"./json.48e3ea08.js";import"./QueryEngineCapabilities.5c978644.js";import"./utils.36b570f4.js";import"./geojson.008ff5c2.js";import"./clientSideDefaults.6a64635b.js";import"./vec2.de7ae252.js";import"./devEnvironmentUtils.592c8a7b.js";var v=Object.defineProperty,_=Object.defineProperties,b=Object.getOwnPropertyDescriptors,V=Object.getOwnPropertySymbols,P=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,S=(r,e,t)=>e in r?v(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,l=(r,e)=>{for(var t in e||(e={}))P.call(e,t)&&S(r,t,e[t]);if(V)for(var t of V(e))w.call(e,t)&&S(r,t,e[t]);return r},h=(r,e)=>_(r,b(e));function y(r){if(r.type==="line-marker"){var e;return{type:"line-marker",color:(e=r.color)==null?void 0:e.toJSON(),placement:r.placement,style:r.style}}return r.constructor.fromJSON(r.toJSON()).toJSON()}function f(r){return hydrateKey(r)}function cr(r,e,t){if(!r)return null;switch(r.type){case"simple-fill":case"picture-fill":return g(r,e,t);case"simple-marker":case"picture-marker":return E(r,e,t);case"simple-line":return x(r,e,t);case"text":return z(r,e,t);case"label":return K(r,e,t);case"cim":return{type:"cim",rendererKey:e.vvFlags,data:r.data,maxVVSize:e.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:e.vvFlags,data:r,maxVVSize:e.maxVVSize};case"web-style":return h(l({},y(r)),{type:"web-style",hash:r.hash(),rendererKey:e.vvFlags,maxVVSize:e.maxVVSize});default:throw new Error(`symbol not supported ${r.type}`)}}function K(r,e,t){const o=r.toJSON(),a=u(c.LABEL,h(l({},e),{placement:o.labelPlacement}));return h(l({materialKey:t?f(a):a,hash:r.hash()},o),{labelPlacement:o.labelPlacement})}function g(r,e,t){const o=e.supportsOutlineFills,a=u(c.FILL,h(l({},e),{isOutlinedFill:o})),i=t?f(a):a,s=r.clone(),n=s.outline;e.supportsOutlineFills||(s.outline=null);const O=l({materialKey:i,hash:s.hash(),isOutlinedFill:!!e.supportsOutlineFills},y(s));if(e.supportsOutlineFills)return O;const p=[];if(p.push(O),n){const m=u(c.LINE,h(l({},e),{isOutline:!0})),d=l({materialKey:t?f(m):m,hash:n.hash()},y(n));p.push(d)}return{type:"composite-symbol",layers:p,hash:p.reduce((m,d)=>d.hash+m,"")}}function x(r,e,t){const o=u(c.LINE,e),a=t?f(o):o,i=r.clone(),s=i.marker;i.marker=null;const n=[];if(n.push(l({materialKey:a,hash:i.hash()},y(i))),s){var O;const p=u(c.MARKER,e),m=t?f(p):p;s.color=(O=s.color)!=null?O:i.color,n.push(l({materialKey:m,hash:s.hash(),lineWidth:i.width},y(s)))}return{type:"composite-symbol",layers:n,hash:n.reduce((p,m)=>m.hash+p,"")}}function E(r,e,t){const o=u(c.MARKER,e),a=t?f(o):o,i=y(r);return h(l({materialKey:a,hash:r.hash()},i),{angle:r.angle,maxVVSize:e.maxVVSize})}function z(r,e,t){const o=u(c.TEXT,e),a=t?f(o):o,i=y(r);return h(l({materialKey:a,hash:r.hash()},i),{angle:r.angle,maxVVSize:e.maxVVSize})}export{cr as createSymbolSchema};
